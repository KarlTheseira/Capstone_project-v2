name: Deploy FlashStudio to Azure App Service

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: flashstudio-app    # Set this to your app name
  PYTHON_VERSION: '3.11'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python version
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      - name: Run tests
        run: |
          # Set test environment variables
          export SECRET_KEY="test-secret-key-for-github-actions"
          export STRIPE_PUBLISHABLE_KEY="pk_test_example"
          export STRIPE_SECRET_KEY="sk_test_example" 
          export ADMIN_USERNAME="admin"
          export ADMIN_PASSWORD="admin"
          export DATABASE_URL="sqlite:///test.db"
          
          # Test basic imports
          python -c "from app import app; print('✅ Flask app imports successfully')"
          python -c "from models import db; print('✅ Database models import successfully')" 
          
      - name: Zip artifact for deployment
        run: |
          # Create deployment package excluding unnecessary files
          zip -r ../release.zip . \
            -x "venv/*" \
            -x "*.git*" \
            -x "__pycache__/*" \
            -x "*.pyc" \
            -x "tests/*" \
            -x "azure-functions/*" \
            -x ".env" \
            -x "*.log"
          
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            ../release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app
          
      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}